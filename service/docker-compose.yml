services:
  neo4j:
    image: neo4j:2025.06.2
    container_name: neo4j-bread
    ports:
      - "7474:7474"   # Web UI
      - "7687:7687"   # Bolt protocol, used for Python driver, etc.
    environment:
      NEO4J_AUTH: "neo4j/bread861122"  # ‚Üê Replace with your desired password
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins
    networks:
      - longshot-net

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq-bread
    ports:
      - "5672:5672"   # RabbitMQ communication (AMQP protocol)
      - "15672:15672" # Management interface (http://localhost:15672)
    environment:
      RABBITMQ_DEFAULT_USER: haowei
      RABBITMQ_DEFAULT_PASS: bread861122 
    networks:
      - longshot-net

  redis:
    image: redis:7
    container_name: redis-bread
    ports:
      - "6379:6379"   # Redis port
    volumes:
      - redis_data:/data
    command: ["redis-server", "--requirepass", "bread861122"] # TODO: Add user name
    networks:
      - longshot-net

  redisinsight:
    image: redis/redisinsight:latest
    container_name: redisinsight-bread
    ports:
      - "5540:5540"
    volumes:
      - redisinsight_data:/data
    networks:
      - longshot-net
    restart: unless-stopped

  mongodb:
    image: mongo:7.0.22-jammy
    container_name: mongo-bread
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: haowei
      MONGO_INITDB_ROOT_PASSWORD: bread861122
    volumes:
      - mongo-data:/data/db
    networks:
      - longshot-net

  mongo-express: # MongoDB web-based admin interface
    image: mongo-express
    container_name: mongo-express
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_BASICAUTH_ENABLED: "true"
      ME_CONFIG_MONGODB_URL: "mongodb://haowei:bread861122@mongo-bread:27017"
    networks:
      - longshot-net
    restart: unless-stopped

  # warehouse:
  #   build:
  #     context: ./warehouse
  #     dockerfile: dockerfile
  #   container_name: warehouse-bread
  #   restart: unless-stopped
  #   ports:
  #     - "8000:8000"   # Warehouse API port
  #   environment:
  #     - PYTHONPATH=/app
  #   depends_on:
  #     - mongodb
  #     - neo4j
  #     - redis
  #     - rabbitmq
  #   networks:
  #     - longshot-net
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3
  #     start_period: 40s

volumes:
  neo4j_data:
  neo4j_logs:
  neo4j_import:
  neo4j_plugins:
  redis_data:
  redisinsight_data:
  mongo-data:

networks:
  longshot-net:
    external: true
    name: longshot-net
    driver: bridge
